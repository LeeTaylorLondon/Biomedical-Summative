C:\Users\lees_\Scripts\python.exe C:\Users\lees_\PycharmProjects\Biomedical-Summative\Scripts\machine_learning_vgg16.py
2022-12-13 01:32:03.974352: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX AVX2
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
(1279, 208, 176, 3)
(5121, 208, 176, 3)
(1279, 208, 176, 3), (5121, 208, 176, 3)
(1279, 208, 176, 3), (5121, 208, 176, 3)
Epoch 1/3
Traceback (most recent call last):
  File "C:\Users\lees_\PycharmProjects\Biomedical-Summative\Scripts\machine_learning_vgg16.py", line 51, in <module>
    traintest_model(m_vgg)
  File "C:\Users\lees_\PycharmProjects\Biomedical-Summative\Scripts\machine_learning_vgg16.py", line 34, in traintest_model
    history = model.fit(x_train, y_train,
  File "C:\Users\lees_\lib\site-packages\keras\utils\traceback_utils.py", line 70, in error_handler
    raise e.with_traceback(filtered_tb) from None
  File "C:\Users\lees_\AppData\Local\Temp\__autograph_generated_filen16cx47u.py", line 15, in tf__train_function
    retval_ = ag__.converted_call(ag__.ld(step_function), (ag__.ld(self), ag__.ld(iterator)), None, fscope)
ValueError: in user code:

    File "C:\Users\lees_\lib\site-packages\keras\engine\training.py", line 1249, in train_function  *
        return step_function(self, iterator)
    File "C:\Users\lees_\lib\site-packages\keras\engine\training.py", line 1233, in step_function  **
        outputs = model.distribute_strategy.run(run_step, args=(data,))
    File "C:\Users\lees_\lib\site-packages\keras\engine\training.py", line 1222, in run_step  **
        outputs = model.train_step(data)
    File "C:\Users\lees_\lib\site-packages\keras\engine\training.py", line 1024, in train_step
        loss = self.compute_loss(x, y, y_pred, sample_weight)
    File "C:\Users\lees_\lib\site-packages\keras\engine\training.py", line 1082, in compute_loss
        return self.compiled_loss(
    File "C:\Users\lees_\lib\site-packages\keras\engine\compile_utils.py", line 265, in __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    File "C:\Users\lees_\lib\site-packages\keras\losses.py", line 152, in __call__
        losses = call_fn(y_true, y_pred)
    File "C:\Users\lees_\lib\site-packages\keras\losses.py", line 284, in call  **
        return ag_fn(y_true, y_pred, **self._fn_kwargs)
    File "C:\Users\lees_\lib\site-packages\keras\losses.py", line 2176, in binary_crossentropy
        backend.binary_crossentropy(y_true, y_pred, from_logits=from_logits),
    File "C:\Users\lees_\lib\site-packages\keras\backend.py", line 5680, in binary_crossentropy
        return tf.nn.sigmoid_cross_entropy_with_logits(

    ValueError: `logits` and `labels` must have the same shape, received ((None, 4) vs (None, 1)).


Process finished with exit code 1
